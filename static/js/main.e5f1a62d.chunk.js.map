{"version":3,"sources":["diet.png","left-arrow.png","right-arrow.png","plus.png","cross.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","formatDate","d","getMonth","toString","length","getDate","getFullYear","DatePicker","props","today","Date","n","getTime","yesterday","tomorrow","todayString","yesterdayString","tomorrowString","dateString","currentDate","actualDateString","className","onClick","handleDateDecrement","src","left","handleDateIncrement","right","onChange","handleDateChange","type","Meal","mealTitle","Item","plus","handleItemAdditionScreenEnter","ItemAdditionScreen","cross","handleItemAdditionScreenExit","value","userInput","MealContainer","App","state","selectedDate","showItemAddition","bind","handleQueryChange","mealId","this","setState","newDate","event","eventYear","target","substring","eventMonth","eventDay","dateSelected","logo","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e5f1a62d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/diet.cf35e2f9.png\";","module.exports = __webpack_public_path__ + \"static/media/left-arrow.3db8b548.png\";","module.exports = __webpack_public_path__ + \"static/media/right-arrow.30cacd84.png\";","module.exports = __webpack_public_path__ + \"static/media/plus.fbd996f1.png\";","module.exports = __webpack_public_path__ + \"static/media/cross.7af79a95.png\";","import React from 'react';\r\nimport './App.css';\r\n\r\nimport logo from './diet.png'\r\nimport left from './left-arrow.png'\r\nimport right from './right-arrow.png'\r\nimport plus from './plus.png'\r\nimport cross from './cross.png'\r\n\r\nfunction formatDate(d) {\r\n  var dMonth = (d.getMonth() + 1).toString().length < 2 ?  '0'+ (d.getMonth()+1).toString() : (d.getMonth()+1).toString()\r\n  var dDay = (d.getDate()).toString().length < 2 ?  '0'+ (d.getDate()).toString() : (d.getDate()).toString()\r\n  var dYear = d.getFullYear().toString();\r\n  var dString = dMonth + '/' + dDay + '/' + dYear;\r\n  return dString;\r\n}\r\n\r\nfunction DatePicker(props){\r\n\r\n  var today = new Date();\r\n  var n = today.getTime();\r\n  n -= 86400000;\r\n  var yesterday = new Date(n);\r\n  n += 172800000;\r\n  var tomorrow = new Date(n);\r\n\r\n  var todayString = formatDate(today);\r\n  var yesterdayString = formatDate(yesterday);\r\n  var tomorrowString = formatDate(tomorrow);\r\n  var dateString = formatDate(props.currentDate);\r\n\r\n  var actualDateString =''\r\n  if(dateString == todayString) {\r\n    actualDateString = \"Today\";\r\n  } else if(dateString == yesterdayString) {\r\n    actualDateString = \"Yesterday\";\r\n  } else if(dateString == tomorrowString) {\r\n    actualDateString = \"Tomorrow\";\r\n  } else {\r\n    actualDateString = dateString;\r\n  }\r\n\r\n  return (\r\n    <div className=\"DateContainer\">\r\n\r\n      <div className=\"ArrowButtonContainer\" onClick={props.handleDateDecrement}>\r\n        <img className=\"ArrowButton\" src={left}>\r\n        </img>\r\n      </div>\r\n      <div className=\"CurrentDate\">{actualDateString}</div>\r\n      <div className=\"ArrowButtonContainer\" onClick={props.handleDateIncrement}>\r\n        <img className=\"ArrowButton\" src={right}>\r\n        </img>\r\n      </div>\r\n      <input onChange={props.handleDateChange} className=\"Calendar\" type=\"date\"/>\r\n  </div>\r\n  );\r\n}\r\n\r\nfunction Greeting(props){\r\n  return (\r\n    <p className=\"Greeting\">Hello, {props.userName}</p>\r\n  );\r\n}\r\n\r\n// function FoodItem(){\r\n//   return (\r\n//     <div className=\"FoodItem\">dummy food info</div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\nfunction Meal(props){\r\n  return (\r\n    <div className=\"MealContainer\">\r\n      <div className=\"LeftTitle\">{props.mealTitle}</div>\r\n      <Item />\r\n      <Item />\r\n      <Item />\r\n      <Item />\r\n      <img className=\"AddButton\" src={plus} onClick={props.handleItemAdditionScreenEnter}></img>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction Item(){\r\n  return(\r\n    <div className=\"Item\">\r\n        <p className=\"ItemName\">potato</p>\r\n        <div className=\"ItemDescription\">\r\n          <p className=\"LeftItemDescription\">generic, 1 potato</p>\r\n          <p className=\"RightItemDescription\">30</p>\r\n        </div>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\nfunction ItemAdditionScreen(props) {\r\n\r\n  return(\r\n    <div className=\"ItemAdditionScreen\">\r\n      <img className=\"ExitButton\" src={cross} onClick={props.handleItemAdditionScreenExit}></img>\r\n        <div className=\"SearchBarContainer\">\r\n          <input className=\"SearchBar\" type=\"text\" value={props.userInput}/>\r\n        </div>\r\n      <div className=\"LeftTitle\">Results</div>\r\n        <Item />\r\n        <Item />\r\n        <Item />\r\n        <Item />\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MealContainer(props){\r\n\r\n\r\n    return(\r\n      <div className=\"Body\">\r\n        <Meal mealTitle=\"Breakfast\" handleItemAdditionScreenEnter={props.handleItemAdditionScreenEnter}/>\r\n        <Meal mealTitle=\"Lunch\" handleItemAdditionScreenEnter={props.handleItemAdditionScreenEnter}/>\r\n        <Meal mealTitle=\"Dinner\" handleItemAdditionScreenEnter={props.handleItemAdditionScreenEnter}/>\r\n        <Meal mealTitle=\"Other\" handleItemAdditionScreenEnter={props.handleItemAdditionScreenEnter}/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedDate: new Date(),\r\n      showItemAddition: false,\r\n      userInput: \"\"\r\n    }\r\n\r\n\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.handleDateDecrement = this.handleDateDecrement.bind(this);\r\n    this.handleDateIncrement = this.handleDateIncrement.bind(this);\r\n    this.handleItemAdditionScreenEnter = this.handleItemAdditionScreenEnter.bind(this);\r\n    this.handleItemAdditionScreenExit = this.handleItemAdditionScreenExit.bind(this);\r\n    this.handleQueryChange = this.handleQueryChange.bind(this);\r\n\r\n  }\r\n\r\n  handleItemAdditionScreenEnter(mealId) {\r\n    this.setState({\r\n      showItemAddition: true\r\n    });\r\n\r\n  }\r\n\r\n  handleItemAdditionScreenExit() {\r\n    this.setState({\r\n      showItemAddition: false\r\n    });\r\n  }\r\n\r\n  handleQueryChange() {\r\n\r\n  }\r\n\r\n  handleDateIncrement() {\r\n    var n = this.state.selectedDate.getTime();\r\n    n += 86400000;\r\n    var newDate = new Date(n);\r\n\r\n    this.setState({\r\n      selectedDate: newDate\r\n    });\r\n\r\n  }\r\n\r\n  handleDateDecrement() {\r\n    var n = this.state.selectedDate.getTime();\r\n    n -= 86400000;\r\n    var newDate = new Date(n);\r\n\r\n    this.setState({\r\n      selectedDate: newDate\r\n    });\r\n\r\n  }\r\n\r\n  handleDateChange(event) {\r\n    var eventYear = event.target.value.substring(0,4);\r\n    var eventMonth = event.target.value.substring(5,7);\r\n    var eventDay = event.target.value.substring(8,10);\r\n    var eventDate = eventMonth + '/' + eventDay + '/'+eventYear;\r\n\r\n    var dateSelected = new Date(eventDate);\r\n    this.setState({\r\n      selectedDate: dateSelected\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    if(this.state.showItemAddition == false) {\r\n      return (\r\n        <div className=\"App\">\r\n          <div className=\"LightContainer\">\r\n            <div className=\"Header\">\r\n              <h1>FoodTracker</h1>\r\n              <img className=\"Logo\" src={logo}></img>\r\n            </div>\r\n            {/* <Greeting userName=\"Emmanuel\"/> */}\r\n            <DatePicker currentDate={this.state.selectedDate} handleDateChange={this.handleDateChange} handleDateIncrement={this.handleDateIncrement} handleDateDecrement={this.handleDateDecrement}/>\r\n            <MealContainer handleItemAdditionScreenExit={this.handleItemAdditionScreenExit} handleItemAdditionScreenEnter={this.handleItemAdditionScreenEnter}  showItemAddition={this.state.showItemAddition}/>\r\n            </div>\r\n\r\n          {this.state.showItemAddition == true &&\r\n            <ItemAdditionScreen userInput={this.state.userInput} handleQueryChange={this.handleQueryChange} handleItemAdditionScreenExit={this.handleItemAdditionScreenExit}/>\r\n          }\r\n\r\n        </div>\r\n        );\r\n    } else {\r\n\r\n      return (\r\n        <div className=\"App\">\r\n          <div className=\"ContainerDark\">\r\n            <div className=\"Header\">\r\n              <h1>FoodTracker</h1>\r\n              <img className=\"Logo\" src={logo}></img>\r\n            </div>\r\n            {/* <Greeting userName=\"Emmanuel\"/> */}\r\n            <DatePicker currentDate={this.state.selectedDate} handleDateChange={this.handleDateChange} handleDateIncrement={this.handleDateIncrement} handleDateDecrement={this.handleDateDecrement}/>\r\n            <MealContainer handleItemAdditionScreenExit={this.handleItemAdditionScreenExit} handleItemAdditionScreenEnter={this.handleItemAdditionScreenEnter} showItemAddition={this.state.showItemAddition}/>\r\n            </div>\r\n\r\n          {this.state.showItemAddition == true &&\r\n            <ItemAdditionScreen handleItemAdditionScreenExit={this.handleItemAdditionScreenExit}/>\r\n          }\r\n\r\n        </div>\r\n        );\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}