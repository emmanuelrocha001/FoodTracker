{"version":3,"sources":["assets/ui/left-arrow.svg","assets/ui/right-arrow.svg","assets/ui/close.svg","assets/ui/refresh.svg","assets/ui/close-white.svg","assets/ui/add-dark.svg","assets/ui/check-green.svg","assets/ui/cross-red.svg","assets/ui/logo.svg","components/Button.js","components/Item.js","components/ExternalScreenLoading.js","components/ExternalScreenTop.js","components/ExternalScreenBottom.js","components/ExternalScreen.js","helper.js","components/DatePicker.js","components/MealContainer.js","components/ProfileItem.js","screens/ProfileScreen.js","screens/SignInScreen.js","screens/SearchScreen.js","screens/ItemScreen.js","App.js","serviceWorker.js","index.js","assets/ui/left-arrow-dark.svg","assets/ui/right-arrow-dark.svg","assets/ui/edit-dark.svg","assets/ui/search.svg"],"names":["module","exports","Button","props","class_name","outerColor","styleClassNameOuter","edit","className","onClick","actionHandler","fieldName","style","width","containerSize","height","background","borderRadius","transitionDuration","styleClassName","src","imageSource","imageSize","Item","isStatic","handleItemScreenToggle","mealName","ExternalScreenLoading","refresh","ExternalScreenTop","screenTitle","exitHandler","cross","ExternalScreenBottom","loadingExternal","buttonText","ExternalScreen","Helper","original","length","substring","d","getMonth","toString","getDate","getFullYear","new_string","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","x","replace","helper","DatePicker","today","Date","n","getTime","yesterday","tomorrow","todayString","formatDate","yesterdayString","tomorrowString","dateString","currentDate","actualDateString","left","handleDateDecrement","right","handleDateIncrement","onChange","handleDateChange","type","Meal","mealTitle","handleSearchScreenToggle","MealContainer","ProfileItem","currentFieldEditName","fieldContent","onBlur","handleEditProfile","placeholder","handleEditInputChange","inputmode","handleEditFieldNameToggle","handleQuitEditProfile","check","ProfileScreen","url","user","handleShowProfile","backgroundImage","handleSignOff","SignInScreen","haveAccount","logo","handleEmailInputChange","handlePasswordInputChange","class","data-onsuccess","handleHaveAccountToggle","error","successMessage","handleSignIn","handleFirstNameInputChange","handleLastNameInputChange","accept","handleProfilePicUpload","handleSignUp","Result","undefined","topLeft","bottomLeft","shorten","Math","round","bottomRight","Results","listResults","results","result","isNaN","fdcId","key","fontSize","marginBottom","toNumberWithCommas","totalHits","SearchScreen","handleQueryChange","onKeyPress","handleEnterSearch","search","topResults","pageSize","currentPage","handlePageDecrement","handlePageIncrement","handleQuery","NutritionScreen","handleNutritionScreenToggle","MacrosVisual","data","name","value","COLORS","animationDuration","animationBegin","innerRadius","outerRadius","fill","paddingAngle","entry","index","Macro","percent","grams","Macros","ItemScreen","showNutrition","currentMeal","showItemAddition","id","pattern","autocomplete","handleItemScreenScreenToggle","foodAPIURL","App","state","editInput","detailedResults","selectedDate","expandItem","currentUser","userInput","searchInput","emailInput","passwordInput","firstNameInput","lastNameInput","profilePicInput","loginError","showProfile","bind","handleScroll","setDetailedResults","event","this","setState","target","updateProps","prop_name","First","Last","Weight","prop_value","push","propName","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","catch","console","log","start","end","ids","fdcids_string","i","workingResults","splice","cPage","ceil","preventDefault","query","pageNumber","currentEditInput","googleUser","profile","getBasicProfile","getId","getName","getImageUrl","getEmail","email","password","form","FormData","append","mode","files","mealId","newDate","eventYear","eventMonth","eventDay","dateSelected","document","addEventListener","removeEventListener","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.44b5653e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/left-arrow.d5f28d66.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-arrow.03316393.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.c639de82.svg\";","module.exports = __webpack_public_path__ + \"static/media/refresh.70a48665.svg\";","module.exports = __webpack_public_path__ + \"static/media/close-white.d9560695.svg\";","module.exports = __webpack_public_path__ + \"static/media/add-dark.bc62abcf.svg\";","module.exports = __webpack_public_path__ + \"static/media/check-green.459ce075.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross-red.e4c8e4ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.53e6d68a.svg\";","import React from 'react';\n\nfunction Button(props) {\n    var class_name = \"ButtonOutside\";\n    var outerColor = \"white\";\n    if(props.styleClassNameOuter != null) {\n        class_name = props.styleClassNameOuter;\n    }\n    if(props.outerColor != null) {\n        outerColor = props.outerColor;\n    }\n\n    if(props.edit === true) {\n        return(\n\n            <div className={class_name} onClick={ () => props.actionHandler(props.fieldName)} style={{width: props.containerSize, height: props.containerSize, background: outerColor, borderRadius: \"50%\", transitionDuration: \"0s\"}} >\n                <img\n                className={props.styleClassName}\n                src={props.imageSource}\n                style={{width: props.imageSize, height: props.imageSize}}\n                >\n                </img>\n            </div>\n        );\n    } else {\n        return(\n\n            <div className={class_name} onClick={props.actionHandler} style={{width: props.containerSize, height: props.containerSize, background: outerColor, borderRadius: \"50%\", transitionDuration: \"0s\"}} >\n                <img\n                className={props.styleClassName}\n                src={props.imageSource}\n                style={{width: props.imageSize, height: props.imageSize}}\n                >\n                </img>\n            </div>\n        );\n    }\n}\n\n\nexport default Button;","import React from 'react';\n\nfunction Item(props){\n    if( props.isStatic === false) {\n        return(\n            <div className=\"Item\" onClick={() =>{props.handleItemScreenToggle(props.mealName)}}>\n            <p className=\"ItemName\">Potato</p>\n            <div className=\"ItemDescription\">\n                <p className=\"LeftItemDescription\">Generic, 1 Potato</p>\n                <p className=\"RightItemDescription\">30</p>\n            </div>\n            </div>\n\n        );\n\n    } else{\n        return(\n            <div className=\"ItemStatic\" >\n            <p className=\"ItemName\">Potato</p>\n            <div className=\"ItemDescription\">\n                <p className=\"LeftItemDescription\">generic, 1 potato</p>\n                <p className=\"RightItemDescription\">30 cal</p>\n            </div>\n            </div>\n\n        );\n    }\n\n}\n\n\nexport default Item;","import refresh from '.././assets/ui/refresh.svg';\nimport React from 'react';\n\nfunction ExternalScreenLoading(props) {\n    return(\n        <div className=\"LoadingIconContainer\">\n            <img src={refresh} className=\"LoadingIcon\">\n            </img>\n        </div>\n    )\n}\n\n\n\nexport default ExternalScreenLoading;","\nimport React from 'react';\nimport Button from './Button';\nimport cross from '.././assets/ui/close-white.svg';\n\nfunction ExternalScreenTop(props) {\n    return(\n        <div className=\"ExternalScreenTopContainer\">\n            <p className=\"ExternalScreenTitleText\">{props.screenTitle}</p>\n            {props.exitHandler !== null &&\n                <div className=\"ExitButtonContainer\">\n                    <Button\n                        styleClassName=\"Exit\"\n                        outerColor=\"#393e46\"\n                        containerSize=\"32px\"\n                        imageSize=\"16px\"\n                        imageSource={cross}\n                        actionHandler={props.exitHandler}\n                    />\n                </div>\n            }\n        </div>\n    );\n}\n\n\nexport default ExternalScreenTop;\n\n{/* <div className=\"ExternalScreenTop\">\n    <p className=\"ExternalScreenTitle\">{props.screenTitle}</p>\n    {props.exitHandler !== null &&\n        <div className=\"ExitButtonContainer\">\n        <Button\n            styleClassName=\"Exit\"\n            containerSize=\"32px\"\n            imageSize=\"16px\"\n            imageSource={cross}\n            actionHandler={props.exitHandler}\n        />\n        </div>\n    }\n</div> */}","import React from 'react';\nimport ExternalScreenLoading from './ExternalScreenLoading';\n\nfunction ExternalScreenBottom(props) {\n\n    if(props.loadingExternal === true) {\n        return(\n            <div className=\"ExternalScreenBottomContainer\">\n                <ExternalScreenLoading />\n            </div>\n        );\n    } else {\n        return(\n            <div className=\"ExternalScreenBottomContainer\" onClick={props.actionHandler}>\n                <p className=\"ExternalButtonText\">{props.buttonText}</p>\n            </div>\n\n        );\n    }\n}\n\nexport default ExternalScreenBottom;\n\n\n// if(props.loadingExternal === true) {\n//     return(\n//         <div className=\"ExternalScreenBottom\">\n//             <div className=\"ExternalButtonLoading\" onClick={props.actionHandler}>\n//                 <ExternalScreenLoading />\n//             </div>\n//         </div>\n//     );\n// } else {\n//     return(\n//         <div className=\"ExternalScreenBottom\">\n//             <div className=\"ExternalButton\" onClick={props.actionHandler}>\n//                 <p className=\"ExternalButtonText\">{props.buttonText}</p>\n//             </div>\n//         </div>\n\n//     );\n// }","\nimport React from 'react';\nimport Button from './Button';\nimport cross from '.././assets/ui/close.svg';\nimport ExternalScreenTop from './ExternalScreenTop';\nimport ExternalScreenBottom from './ExternalScreenBottom';\n\nfunction ExternalScreen(props) {\n    return(\n        <div className=\"DarkBackground\">\n\n            <div className=\"ExternalScreenContainer\">\n                <ExternalScreenTop screenTitle=\"Welcome\" exitHandler={5}/>\n                <div className=\"ExternalScreenMiddleContainer\">\n                </div>\n                <ExternalScreenBottom loadingExternal={true} buttonText=\"Sign In\"/>\n            </div>\n\n        </div>\n    );\n}\n\n\nexport default ExternalScreen;\n","class Helper {\n\n    constructor() {\n    };\n\n    shorten(original){\n        if(original.length > 40) {\n            return original.substring(0, 40) + \"...\";\n        } else {\n            return original;\n        }\n    }\n\n    formatDate(d) {\n        var dMonth = (d.getMonth() + 1).toString().length < 2 ?  '0'+ (d.getMonth()+1).toString() : (d.getMonth()+1).toString()\n        var dDay = (d.getDate()).toString().length < 2 ?  '0'+ (d.getDate()).toString() : (d.getDate()).toString()\n        var dYear = d.getFullYear().toString();\n        var dString = dMonth + '/' + dDay + '/' + dYear;\n        return dString;\n    }\n\n    toTitleCase(original) {\n        var new_string = original.toLowerCase().split(' ').map( word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n\n        if(new_string.length > 35){\n            return new_string.substring(0, 35);\n        } else {\n            return new_string;\n        }\n    }\n\n\n    toNumberWithCommas(x) {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n\n}\n\n\nexport default Helper;","\nimport React from 'react';\nimport Button from './Button';\nimport left from '.././assets/ui/left-arrow-dark.svg';\nimport right from '.././assets/ui/right-arrow-dark.svg';\nimport Helper from '../helper.js';\n\nconst helper = new Helper();\n\n\nfunction DatePicker(props){\n\n    var today = new Date();\n    var n = today.getTime();\n    n -= 86400000;\n    var yesterday = new Date(n);\n    n += 172800000;\n    var tomorrow = new Date(n);\n\n    var todayString = helper.formatDate(today);\n    var yesterdayString = helper.formatDate(yesterday);\n    var tomorrowString = helper.formatDate(tomorrow);\n    var dateString = helper.formatDate(props.currentDate);\n\n    var actualDateString =''\n    if(dateString === todayString) {\n        actualDateString = \"Today\";\n    } else if(dateString === yesterdayString) {\n        actualDateString = \"Yesterday\";\n    } else if(dateString === tomorrowString) {\n        actualDateString = \"Tomorrow\";\n    } else {\n        actualDateString = dateString;\n    }\n    return (\n\n        <div className=\"CalendarDateContainer\">\n            <div className=\"DateContainer\">\n            <div className=\"ArrowButtonContainer\">\n                <Button\n                containerSize=\"32px\"\n                imageSize=\"16px\"\n                imageSource={left}\n                actionHandler={props.handleDateDecrement}\n                />\n            </div>\n            <div className=\"CurrentDate\">{actualDateString}</div>\n            <div className=\"ArrowButtonContainer\">\n                <Button\n                containerSize=\"32px\"\n                imageSize=\"16px\"\n                imageSource={right}\n                actionHandler={props.handleDateIncrement}\n                />\n            </div>\n            </div>\n            <div className=\"CalendarContainer\">\n                <input onChange={props.handleDateChange} className=\"Calendar\" type=\"date\"/>\n            </div>\n        </div>\n    );\n}\n\nexport default DatePicker;\n","\nimport React from 'react';\nimport '.././style/MealContainer.css';\n\nimport Item from './Item';\nimport Button from './Button';\nimport cross from '../assets/ui/add-dark.svg';\nfunction Meal(props){\n    return (\n        <div className=\"MealContainer\">\n            <div className=\"LeftTitle\">{props.mealTitle}</div>\n            <Item\n            handleItemScreenToggle={props.handleItemScreenToggle}\n            mealName={props.mealTitle}\n            isStatic={false}\n            />\n            <Item\n            handleItemScreenToggle={props.handleItemScreenToggle}\n            mealName={props.mealTitle}\n            isStatic={false}\n            />\n            <Item\n            handleItemScreenToggle={props.handleItemScreenToggle}\n            mealName={props.mealTitle}\n            isStatic={false}\n            />\n\n\n            <div className=\"AddButtonContainer\">\n                <Button\n                    outerColor=\"white\"\n                    styleClassName=\"Add\"\n                    containerSize=\"32px\"\n                    imageSize=\"22px\"\n                    imageSource={cross}\n                    styleClassNameOuter=\"AddButtonOuter\"\n                    actionHandler={props.handleSearchScreenToggle}\n                />\n\n            </div>\n\n        </div>\n    );\n}\n\nfunction MealContainer(props){\n    return(\n        <div className=\"Body\">\n            <Meal\n            mealTitle=\"Breakfast\"\n            handleSearchScreenToggle={props.handleSearchScreenToggle}\n            handleItemScreenToggle={props.handleItemScreenToggle}\n            />\n            <Meal\n            mealTitle=\"Lunch\"\n            handleSearchScreenToggle={props.handleSearchScreenToggle}\n            handleItemScreenToggle={props.handleItemScreenToggle}\n            />\n            <Meal\n            mealTitle=\"Dinner\"\n            handleSearchScreenToggle={props.handleSearchScreenToggle}\n            handleItemScreenToggle={props.handleItemScreenToggle}\n    \n            />\n            <Meal\n            mealTitle=\"Other\"\n            handleSearchScreenToggle={props.handleSearchScreenToggle}\n            handleItemScreenToggle={props.handleItemScreenToggle}\n            />\n        </div>\n    );\n}\n\n\nexport default MealContainer;","import React from 'react';\nimport Button from './Button';\n\nimport edit from '.././assets/ui/edit-dark.svg'\nimport check from '.././assets/ui/check-green.svg'\nimport cross from '.././assets/ui/cross-red.svg'\n\nfunction ProfileItem(props) {\n\n\n    return(\n        <div className=\"ProfileInfoContainer\">\n            <div className=\"LeftProfile\">{props.fieldName}</div>\n            {props.currentFieldEditName !== props.fieldName &&\n\n                <p className=\"RightProfile\">{props.fieldContent} </p>\n            }\n\n            {props.currentFieldEditName === props.fieldName && props.currentFieldEditName !== \"Weight\"&&\n                <div className=\"EditInputFieldContainer\">\n                    <input className=\"EditInputField\" type=\"text\" onBlur={props.handleEditProfile} placeholder=\"\" onChange={props.handleEditInputChange}/>\n                </div>\n\n            }\n\n            {props.currentFieldEditName === props.fieldName && props.currentFieldEditName === \"Weight\" &&\n                <div className=\"EditInputFieldContainer\">\n                    <input className=\"EditInputField\" type=\"text\" inputmode=\"numeric\" placeholder=\"\" onChange={props.handleEditInputChange}/>\n                </div>\n\n            }\n\n\n            {props.currentFieldEditName === \"\" &&\n                <Button\n                    styleClassNameOuter=\"EditOuter\"\n                    outerColor=\"white\"\n                    containerSize=\"32px\"\n                    imageSize=\"18px\"\n                    imageSource={edit}\n                    actionHandler={props.handleEditFieldNameToggle}\n                    edit={true}\n                    fieldName={props.fieldName}\n                />\n            }\n\n            {props.currentFieldEditName === props.fieldName &&\n                <div className=\"ProfileEditActionContainer\">\n\n                    <Button\n                        styleClassNameOuter=\"EditOuterQuit\"\n                        outerColor=\"white\"\n                        containerSize=\"32px\"\n                        imageSize=\"18px\"\n                        imageSource={cross}\n                        actionHandler={props.handleQuitEditProfile}\n                    />\n                    <Button\n                        styleClassNameOuter=\"EditOuterCheck\"\n                        outerColor=\"white\"\n                        containerSize=\"32px\"\n                        imageSize=\"18px\"\n                        imageSource={check}\n                        actionHandler={props.handleEditProfile}\n                    />\n\n                </div>\n            }\n            \n        </div>\n\n\n    );\n\n}\n{/* <input className=\"InfoInput\" type=\"text\" placeholder=\"Email\" onChange={props.handleEmailInputChange}/> */}\n\n\nexport default ProfileItem;","import React from 'react';\nimport ExternalScreenTop from '.././components/ExternalScreenTop';\nimport ExternalScreenBottom from '../components/ExternalScreenBottom';\nimport ProfileItem from '../components/ProfileItem';\nimport Button from '.././components/Button';\nimport '.././style/ProfileScreen.css';\nimport edit from '.././assets/ui/edit-dark.svg'\n\n\nfunction ProfileScreen(props) {\n\n\n    var url = props.user[\"avatar\"];\n    return(\n        <div className=\"DarkBackground\">\n            <div className=\"ExternalScreenContainer\">\n                <ExternalScreenTop screenTitle=\"Profile\" exitHandler={props.handleShowProfile}/>\n                <div className=\"ExternalScreenMiddleContainer\">\n\n                    <div className=\"Buffer\"></div>\n\n                    <div className=\"ProfileScreenPicContainer\">\n                        <div className=\"ProfileScreenPic\" style={{backgroundImage: \"url(\\\" \"+ url +\"\\\")\"}}></div>\n                    </div>\n\n                    <div className=\"ProfileContentContainer\">\n                        <ProfileItem \n                            fieldName=\"First\"\n                            fieldContent={props.user[\"firstName\"]}\n                            handleEditFieldNameToggle={props.handleEditFieldNameToggle}\n                            currentFieldEditName={props.currentFieldEditName}\n                            handleEditProfile={props.handleEditProfile}\n                            handleEditInputChange={props.handleEditInputChange}\n                            handleQuitEditProfile={props.handleQuitEditProfile}\n                        />\n                        <ProfileItem \n                            fieldName=\"Last\"\n                            fieldContent={props.user[\"lastName\"]}\n                            handleEditFieldNameToggle={props.handleEditFieldNameToggle}\n                            currentFieldEditName={props.currentFieldEditName}\n                            handleEditProfile={props.handleEditProfile}\n                            handleEditInputChange={props.handleEditInputChange}\n                            handleQuitEditProfile={props.handleQuitEditProfile}\n\n\n                        />\n\n                        <ProfileItem \n                            fieldName=\"Weight\"\n                            fieldContent={props.user[\"weight\"] + \" lbs.\"}\n                            handleEditFieldNameToggle={props.handleEditFieldNameToggle}\n                            currentFieldEditName={props.currentFieldEditName}\n                            handleEditProfile={props.handleEditProfile}\n                            handleEditInputChange={props.handleEditInputChange}\n                            handleQuitEditProfile={props.handleQuitEditProfile}\n\n\n                        /> \n                        {/* <ProfileItem \n                            fieldName=\"Email\"\n                            fieldContent={props.user[\"email\"]}\n                            handleEditFieldNameToggle={props.handleEditFieldNameToggle}\n                            currentFieldEditName={props.currentFieldEditName}\n                            handleEditProfile={props.handleEditProfile}\n                            handleEditInputChange={props.handleEditInputChange}\n\n                        \n                        />  */}\n\n                        <div className=\"ProfileInfoContainer\">\n                            <div className=\"LeftProfile\">Email</div>\n                            <p className=\"RightProfile\">{props.user[\"email\"]}</p>\n                        </div>\n\n                        <div className=\"ProfileInfoContainer\">\n                            <div className=\"LeftProfile\">ID</div>\n                            <p className=\"RightProfile\">{props.user[\"userId\"]}</p>\n                        </div>\n                    </div>\n                \n                </div>\n\n                <ExternalScreenBottom buttonText=\"Sign Out\" loadingExternal={props.loadingExternal} actionHandler={props.handleSignOff} />\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileScreen;","import React from 'react';\nimport ExternalScreenTop from '.././components/ExternalScreenTop';\nimport ExternalScreenBottom from '../components/ExternalScreenBottom';\nimport logo from '.././assets/ui/logo.svg';\n\nfunction SignInScreen(props) {\n    if( props.haveAccount === true ) {\n        return(\n            <div className=\"DarkBackground\">\n                    <div className=\"ExternalScreenContainer\" >\n                        <ExternalScreenTop screenTitle=\"Welcome\" exitHandler={null}/>\n                        <div className=\"ExternalScreenMiddleContainer\">\n                                \n                                <div className=\"Buffer\"></div>\n                                \n                                <div className=\"LogoIsolatedContainer\">\n                                    <img className=\"LogoIsolated\" src={logo}></img>\n                                </div>\n                        \n                                <div className=\"InfoContainer\">\n                                    {/* <img className=\"UserNameIcon\" src={user}></img> */}\n                                    <input className=\"InfoInput\" type=\"text\" placeholder=\"Email\" onChange={props.handleEmailInputChange}/>\n                                </div>\n                        \n                                <div className=\"InfoContainer\">\n                                    {/* <img className=\"UserNameIcon\" src={lock}></img> */}\n                                    <input className=\"InfoInput\" type=\"password\" placeholder=\"Password\" onChange={props.handlePasswordInputChange} />\n                                </div>\n\n                                <div className=\"InfoContainer\" style={{width: \"100%\"}}>\n                                    <div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div>\n                                </div>\n                        \n                                <p className=\"NoAccountText\" onClick={props.handleHaveAccountToggle} >Don't have an account? Sign up here!</p>\n                        \n                                { props.error != '' &&\n                                    <p className=\"LoginError\">{props.error}</p>\n                                }\n                        \n                                {props.successMessage != '' &&\n                                    <p className=\"SuccessMessage\">{props.successMessage}</p>\n                                }\n                        </div>\n                    \n                        <ExternalScreenBottom buttonText=\"Sign In\" loadingExternal={props.loadingExternal} actionHandler={props.handleSignIn} />\n                \n                    </div>\n                </div>\n        );\n    } else {\n        return(\n            <div className=\"DarkBackground\">\n    \n                <div className=\"ExternalScreenContainer\">\n                    <ExternalScreenTop screenTitle=\"Welcome\" exitHandler={null}/>\n            \n                    <div className=\"ExternalScreenMiddleContainer\">\n                        <div className=\"Buffer\">\n\n                        </div>\n                        <div className=\"LogoIsolatedContainer\">\n                            <img className=\"LogoIsolated\" src={logo}></img>\n                        </div>\n                \n                \n                        <div className=\"InfoContainer\">\n                            <input className=\"InfoInput\" type=\"text\" placeholder=\"First Name\" onChange={props.handleFirstNameInputChange}/>\n                        </div>\n                \n                        <div className=\"InfoContainer\">\n                            <input className=\"InfoInput\" type=\"text\" placeholder=\"Last Name\" onChange={props.handleLastNameInputChange}/>\n                        </div>\n                \n                        <div className=\"InfoContainer\">\n                            <input className=\"InfoInput\" type=\"text\" placeholder=\"Email\" onChange={props.handleEmailInputChange}/>\n                        </div>\n                \n                        <div className=\"InfoContainer\">\n                            <input className=\"InfoInput\" type=\"password\" placeholder=\"Password\" onChange={props.handlePasswordInputChange}/>\n                        </div>\n                \n                        <div className=\"PicUploaderContainer\">\n                            <input className=\"PicUploader\" type=\"file\" accept=\"image/png, image/jpeg, image/jpg\" onChange={props.handleProfilePicUpload} />\n                        </div>\n                \n                        <p className=\"NoAccountText\" onClick={props.handleHaveAccountToggle} >Already have an account? Sign in here!</p>\n                \n                        { props.error !== '' &&\n                            <p className=\"LoginError\">{props.error}</p>\n                        }\n                \n                        {props.successMessage !== '' &&\n                            <p className=\"SuccessMessage\">{props.successMessage}</p>\n                        }\n            \n                    </div>\n                    <ExternalScreenBottom buttonText=\"Sign Up\" loadingExternal={props.loadingExternal} actionHandler={props.handleSignUp} />\n            \n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SignInScreen;\n","import React from 'react';\nimport '.././style/SearchScreen.css';\n\nimport ExternalScreenTop from '.././components/ExternalScreenTop';\nimport ExternalScreenBottom from '../components/ExternalScreenBottom';\nimport Helper from '../helper.js';\nimport Button from '../components/Button';\n\nimport left from '../assets/ui/left-arrow-dark.svg';\nimport right from '../assets/ui/right-arrow-dark.svg';\nimport search from '../assets/ui/search.svg';\nconst helper = new Helper();\n\nfunction Result(props) {\n    return(\n        <div className=\"Item\" >\n            {props.topLeft !== undefined &&\n                <p className=\"ItemName\">{props.topLeft}</p>\n    \n            }\n            <div className=\"ItemDescription\">\n                {props.bottomLeft !== undefined &&\n\n                    <p className=\"LeftItemDescription\">{helper.shorten(props.bottomLeft)}</p>\n                }\n                <p className=\"RightItemDescription\">{Math.round(props.bottomRight)}</p>\n            </div>\n        </div>\n    );\n}\n\n\nfunction Results(props) {\n    const listResults =  props.results.map( result =>\n        <div>\n            {isNaN(result) === true &&\n                <Result\n                topLeft={result[\"topLeft\"]}\n                bottomLeft={result[\"bottomLeft\"]}\n                bottomRight={result[\"bottomRight\"]}\n                fdcId={result[\"fdcId\"]}\n                key={result[\"fdcId\"]}\n                />\n            }\n        </div>\n    );\n\n    return(\n        <div>\n            <div className=\"LeftTitle\" style={{fontSize: \"15px\", marginBottom: \"30px\"}}>Top Results ({helper.toNumberWithCommas(props.totalHits.toString())} total results)</div>\n            {listResults}\n        </div>\n    )\n}\n\n\nfunction SearchScreen(props) {\n    return(\n\n        <div className=\"DarkBackground\">\n            <div className=\"ExternalScreenContainer\">\n                <ExternalScreenTop screenTitle=\"Powered by FoodData Central\" exitHandler={props.handleSearchScreenToggle} />\n                <div className=\"ExternalScreenMiddleContainer\">\n                    <div className=\"Buffer\"></div>\n\n                    <div className=\"SearchBarContainer\">\n                        <input className=\"SearchBar\" type=\"text\" onChange={props.handleQueryChange} onKeyPress={props.handleEnterSearch} />\n                        <img className=\"SearchIcon\" src={search}></img>\n                    </div>\n            \n                    {props.results !== undefined && props.results.length > 0 &&\n                        <Results\n                            results={props.results}\n                            topResults={props.topResults}\n                            pageSize={props.pageSize}\n                            currentPage={props.currentPage}\n                            totalHits={props.totalHits}\n                        />\n                    }\n            \n                    {props.results !== undefined && props.results.length > 0 &&\n                        <div className=\"resultPagePicker\">\n                            <div className=\"DateContainer\">\n                                <div className=\"ArrowButtonContainer\">\n                                    <Button\n                                    outerColor=\"white\"\n                                    containerSize=\"32px\"\n                                    imageSize=\"16px\"\n                                    imageSource={left}\n                                    actionHandler={props.handlePageDecrement}\n                                    />\n                                </div>\n                                <div className=\"CurrentDate\">{props.currentPage}</div>\n                                <div className=\"ArrowButtonContainer\">\n                                    <Button\n                                    outerColor=\"white\"\n                                    containerSize=\"32px\"\n                                    imageSize=\"16px\"\n                                    imageSource={right}\n                                    actionHandler={props.handlePageIncrement}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </div>\n                <ExternalScreenBottom buttonText=\"Search\" loadingExternal={props.loadingExternal} actionHandler={props.handleQuery} />\n            </div>\n        </div>\n    );\n}\n\nexport default SearchScreen;","import React from 'react';\nimport '.././style/ItemScreen.css';\n/*char api*/\nimport {\n    PieChart, Pie, Sector, Cell,\n} from 'recharts';\n\nimport ExternalScreenTop from '.././components/ExternalScreenTop';\nimport ExternalScreenBottom from '../components/ExternalScreenBottom';\nimport Helper from '../helper.js';\nimport Item from '../components/Item';\nimport Button from '../components/Button';\n\nimport left from '../assets/ui/left-arrow.svg';\nimport right from '../assets/ui/right-arrow.svg';\nimport search from '../assets/ui/search.svg';\nconst helper = new Helper();\n\n\nfunction NutritionScreen(props) {\n    return(\n        \n        <div className=\"ExternalScreen\">\n            <div className=\"HideNutritionButton\" onClick={props.handleNutritionScreenToggle}>\n            Hide Nutrition &#9650;\n            </div>\n\n            <div className=\"Nutrient\">\n                <p className=\"NutrientLeft\">Saturated Fat</p>\n                <p className=\"NutrientRight\">2.5 g</p>\n            </div>\n\n            <div className=\"Nutrient\">\n                <p className=\"NutrientLeft\">Trans Fat</p>\n                <p className=\"NutrientRight\">0 g</p>\n            </div>\n\n            <div className=\"Nutrient\">\n                <p className=\"NutrientLeft\">Polyunsaturated Fat</p>\n                <p className=\"NutrientRight\">0 g</p>\n            </div>\n\n            <div className=\"Nutrient\">\n                <p className=\"NutrientLeft\">Monounsaturated Fat</p>\n                <p className=\"NutrientRight\">0 g</p>\n            </div>\n\n            <div className=\"Nutrient\">\n                <p className=\"NutrientLeft\">Cholesterol</p>\n                <p className=\"NutrientRight\">0 mg</p>\n            </div>\n\n            <div className=\"Nutrient\">\n                <p className=\"NutrientLeft\">Sodium</p>\n                <p className=\"NutrientRight\">225 mg</p>\n            </div>\n\n            <div className=\"Nutrient\">\n                <p className=\"NutrientLeft\">Dietary Fiber</p>\n                <p className=\"NutrientRight\">1 g</p>\n            </div>\n\n            <div className=\"Nutrient\">\n                <p className=\"NutrientLeft\">Sugar</p>\n                <p className=\"NutrientRight\">20 g</p>\n            </div>\n\n            <div className=\"Nutrient\">\n                <p className=\"NutrientLeft\">Vitamin D</p>\n                <p className=\"NutrientRight\">0 %</p>\n            </div>\n\n            <div className=\"Nutrient\">\n                <p className=\"NutrientLeft\">Calcium</p>\n                <p className=\"NutrientRight\">0 %</p>\n            </div>\n\n            <div className=\"Nutrient\">\n                <p className=\"NutrientLeft\">Iron</p>\n                <p className=\"NutrientRight\">0 %</p>\n            </div>\n\n            <div className=\"Nutrient\">\n                <p className=\"NutrientLeft\">Pottasium</p>\n                <p className=\"NutrientRight\">0 mg</p>\n            </div>\n\n            <div className=\"Nutrient\">\n                <p className=\"NutrientLeft\">Vitamin A</p>\n                <p className=\"NutrientRight\">0 %</p>\n            </div>\n\n            <div className=\"Nutrient\">\n                <p className=\"NutrientLeft\">Vitamin C</p>\n                <p className=\"NutrientRight\">0 %</p>\n            </div>\n\n        </div>\n        );\n}\n\nfunction MacrosVisual(props) {\n    const data = [{name: 'Carbs', value: 40}, {name: 'Fat', value: 10},\n                    {name: 'Protein', value: 2}];\n    const COLORS = ['#393E46', '#f3c623', '#848484'];\n\n    return (\n        <div className=\"CalMacroContainer\">\n            <PieChart className=\"Pie\" width={90} height={90}>\n                <Pie\n                animationDuration={900}\n                animationBegin={100}\n                data={data}\n                innerRadius={22}\n                outerRadius={30}\n                fill=\"#FFFFFF\"\n                paddingAngle={5}\n                >\n                {\n                    data.map((entry, index) => <Cell fill={COLORS[index % COLORS.length]}/>)\n                }\n                </Pie>\n            </PieChart>\n\n        </div>\n    );\n}\n\nfunction Macro(props) {\n    return(\n        <div className=\"Macro\">\n            {props.name === \"Carbs\" &&\n                <p className=\"MacroPercentageCarbs\">{props.percent}%</p>\n        \n            }\n            {props.name === \"Protein\" &&\n                <p className=\"MacroName\">{props.percent}%</p>\n        \n            }\n            {props.name === \"Fat\" &&\n                <p className=\"MacroPercentageProtein\">{props.percent}%</p>\n            }\n            <p className=\"MacroGrams\">{props.grams} g</p>\n            <p className=\"MacroName\">{props.name}</p>\n        </div>\n    );\n}\n\nfunction Macros(props) {\n    return(\n        <div className=\"MacrosContainer\">\n            <MacrosVisual />\n            <Macro name=\"Carbs\" grams={40} percent={77}/>\n            <Macro name=\"Fat\" grams={10} percent={20}/>\n            <Macro name=\"Protein\" grams={2} percent={3}/>\n        </div>\n    );\n}\n\n\nfunction ItemScreen(props) {\n    if(props.showNutrition === false){\n        return(\n            <div className=\"DarkBackground\">\n\n                <div className=\"ExternalScreenContainer\">\n        \n                    {props.currentMeal === \"\" &&\n                        <ExternalScreenTop screenTitle=\"Add Entry\" exitHandler={props.handleItemScreenToggle}/>\n                    }\n            \n                    {props.currentMeal !== \"\" &&\n                        <ExternalScreenTop screenTitle=\"Edit Entry\" exitHandler={props.handleItemScreenToggle}/>\n                    }\n            \n                    <div className=\"ExternalScreenMiddleContainer\">\n\n                        <div className=\"Buffer\"></div>\n                        {props.showItemAddition === false && props.currentMeal !== \"\" &&\n                            <div className=\"ItemInput\">\n                            <p className=\"ItemInputLeft\">Meal</p>\n                            <select className=\"MealSelector\">\n                                <option className=\"MealSelectorChoice\" value=\"breakfast\">Breakfast</option>\n                                <option className=\"MealSelectorChoice\" value=\"lunch\">Lunch</option>\n                                <option className=\"MealSelectorChoice\" value=\"dinner\">Dinner</option>\n                                <option className=\"MealSelectorChoice\" value=\"other\">Other</option>\n                            </select>\n                            </div>\n                        }\n\n                        <Item\n                            mealName=\"\"\n                            isStatic={true}\n                        />\n\n                        <Macros />\n\n                        <div className=\"ItemInput\">\n                            <p className=\"ItemInputLeft\">Serving size</p>\n                            <select className=\"MealSelector\">\n                                <option className=\"MealSelectorChoice\" value=\"breakfast\">1 g</option>\n                                <option className=\"MealSelectorChoice\" value=\"lunch\">1 cup, diced</option>\n                                <option className=\"MealSelectorChoice\" value=\"dinner\">1 oz</option>\n                                <option className=\"MealSelectorChoice\" value=\"other\">1 kg</option>\n                                <option className=\"MealSelectorChoice\" value=\"other\">1 large</option>\n                                <option className=\"MealSelectorChoice\" value=\"other\">1 small</option>\n\n\n                            </select>\n                        </div>\n\n                        <div className=\"ItemInput\">\n                            <p className=\"ItemInputLeft\">Number of Servings</p>\n                                <input\n                                className=\"NumberInput\"\n                                value={1}\n                                type=\"text\"\n                                name=\"token\"\n                                id=\"token\"\n                                inputmode=\"numeric\"\n                                pattern=\"[0-9]*\"\n                                autocomplete=\"one-time-code\"\n                                />\n                        </div>\n                \n                        <div className=\"ShowNutritionButton\" onClick={props.handleNutritionScreenToggle}>\n                            Show Nutrition &#x25BC;\n                        </div>\n            \n                    </div>\n            \n            \n                    {props.showItemAddition === false &&\n                        <ExternalScreenBottom buttonText=\"Update\" loadingExternal={props.loadingExternal} actionHandler={props.handleItemScreenToggle} />\n            \n                    }\n                    {props.showItemAddition === true &&\n                        <ExternalScreenBottom buttonText=\"Add\" loadingExternal={props.loadingExternal} actionHandler={props.handleItemScreenScreenToggle} />\n                    }\n        \n        \n                </div>\n            </div>\n        );\n    } else {\n        return(\n            <div className=\"DarkBackground\">\n                <NutritionScreen handleNutritionScreenToggle={props.handleNutritionScreenToggle} />\n            </div>\n        );\n    }\n    \n}\n\n\n\n\nexport default ItemScreen;","import React from 'react';\nimport './App.css';\nimport './style/MainApp.css';\nimport './style/ExternalScreen.css';\n/*char api*/\nimport {\n  PieChart, Pie, Sector, Cell,\n} from 'recharts';\n// app assets\nimport logo from './assets/ui/logo.svg';\nimport left from './assets/ui/left-arrow.svg';\nimport right from './assets/ui/right-arrow.svg';\nimport cross from './assets/ui/close.svg';\n\n// import components\nimport { Link, BrowserRouter as Router, Route } from 'react-router-dom';\nimport Button from './components/Button';\nimport Item from './components/Item';\nimport ExternalScreenLoading from './components/ExternalScreenLoading';\nimport ExternalScreenTop from './components/ExternalScreenTop';\nimport ExternalScreenBottom from './components/ExternalScreenBottom';\nimport ExternalScreen from './components/ExternalScreen';\nimport DatePicker from './components/DatePicker';\nimport MealContainer from './components/MealContainer';\n// import screens\nimport ProfileScreen from './screens/ProfileScreen';\nimport SignInScreen from './screens/SignInScreen';\nimport SearchScreen from './screens/SearchScreen';\nimport ItemScreen from './screens/ItemScreen';\nimport Helper from './helper.js';\n\n// const foodAPIURL = 'https://localhost:5000'\nconst foodAPIURL = 'https://food-tracker-api.herokuapp.com'\n\n\n// helper functions\nconst helper = new Helper();\n\n//--------------------------------------------------------------------------------------------------->\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loadingExternal: false,\n      currentFieldEditName: \"\",\n      editInput: \"\",\n      results: [],\n      detailedResults: [],\n      currentPage: 1,\n      pageSize: 5,\n      totalHits: 0,\n      selectedDate: new Date(),\n      showItemAddition: false,\n      expandItem: false,\n      showNutrition: false,\n      currentUser: null,\n      userInput: \"\",\n      searchInput: \"\",\n      emailInput:\"\",\n      passwordInput: \"\",\n      firstNameInput: \"\",\n      lastNameInput: \"\",\n      profilePicInput: null,\n      currentMeal: \"\",\n      loginError: \"\",\n      successMessage: \"\",\n      haveAccount: true,\n      showProfile: false\n    }\n\n    // date\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleDateDecrement = this.handleDateDecrement.bind(this);\n    this.handleDateIncrement = this.handleDateIncrement.bind(this);\n\n    // page\n    this.handlePageIncrement = this.handlePageIncrement.bind(this);\n    this.handlePageDecrement = this.handlePageDecrement.bind(this);\n\n\n    // screen toggles\n    this.handleSearchScreenToggle = this.handleSearchScreenToggle.bind(this);\n    this.handleItemScreenToggle = this.handleItemScreenToggle.bind(this);\n    this.handleNutritionScreenToggle = this.handleNutritionScreenToggle.bind(this);\n    this.handleHaveAccountToggle = this.handleHaveAccountToggle.bind(this);\n    this.handleShowProfile = this.handleShowProfile.bind(this);\n    // input handlers\n    this.handleEmailInputChange = this.handleEmailInputChange.bind(this);\n    this.handlePasswordInputChange = this.handlePasswordInputChange.bind(this);\n    this.handleFirstNameInputChange = this.handleFirstNameInputChange.bind(this);\n    this.handleLastNameInputChange = this.handleLastNameInputChange.bind(this);\n    this.handleProfilePicUpload = this.handleProfilePicUpload.bind(this);\n    this.handleQueryChange = this.handleQueryChange.bind(this);\n    this.handleEditInputChange = this.handleEditInputChange.bind(this);\n\n    // action handlers\n    this.handleSignIn = this.handleSignIn.bind(this);\n    this.handleSignOff = this.handleSignOff.bind(this);\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.handleQuery = this.handleQuery.bind(this);\n    this.handleEnterSearch = this.handleEnterSearch.bind(this);\n    this.handleEditFieldNameToggle = this.handleEditFieldNameToggle.bind(this);\n    this.handleEditProfile = this.handleEditProfile.bind(this);\n    this.handleQuitEditProfile = this.handleQuitEditProfile.bind(this);\n    // block scroll\n    this.handleScroll = this.handleScroll.bind(this);\n    // test\n    this.setDetailedResults = this.setDetailedResults.bind(this);\n\n\n\n  }\n\n  handleEditInputChange(event) {\n    this.setState({\n      editInput: event.target.value\n    });\n\n  }\n\n  handleQuitEditProfile() {\n    this.setState({\n      loadingExternal: false,\n      currentFieldEditName: \"\",\n      editInput: \"\"\n    });\n  }\n\n  handleEditProfile() {\n    if(this.state.editInput !== \"\") {\n\n      var propNameDic = {First: \"firstName\", Last: \"lastName\", Weight: \"weight\"};\n      var updateProps = [];\n      var field_name = this.state.currentFieldEditName;\n      var prop_name = propNameDic[field_name];\n      var prop_value = this.state.editInput;\n      updateProps.push({ propName: prop_name, value: prop_value});\n\n      const requestOptions = {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(updateProps)\n      };\n\n      this.setState({\n        loadingExternal: true\n      });\n\n      fetch(foodAPIURL+'/user/' + this.state.currentUser[\"userId\"], requestOptions)\n      .then(response => response.json()).then( data => {\n          this.setState({\n            currentUser: data[\"user\"],\n            loadingExternal: false,\n            currentFieldEditName: \"\",\n            editInput: \"\"\n          });\n\n      })\n      .catch( error => {\n        console.log(error);\n        this.setState({\n          loadingExternal: false,\n          currentFieldEditName: \"\",\n          editInput: \"\"\n        });\n\n      });\n  \n    } else {\n      this.setState({\n        loadingExternal: false,\n        currentFieldEditName: \"\",\n        editInput: \"\"\n      });\n    }\n  }\n  handleEditFieldNameToggle(fieldName) {\n    // alert(fieldName);\n    this.setState({\n      currentFieldEditName: fieldName\n    });\n  }\n\n  setDetailedResults() {\n\n    var start = this.state.pageSize * (this.state.currentPage-1);\n    var end = start + this.state.pageSize;\n    var ids = this.state.results.slice(start, end);\n\n\n\n    var fdcids_string = \"\";\n      for(var i=0;i<ids.length;i++) {\n        if(i===0) {\n          fdcids_string = fdcids_string + \"?fdcids=\" + ids[i];\n        } else {\n          fdcids_string = fdcids_string + \"&fdcids=\" + ids[i];\n        }\n      }\n\n    this.setState({\n      loadingExternal: true\n    });\n\n    const requestOps = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    };\n    fetch( foodAPIURL + '/search/foods/' + fdcids_string, requestOps)\n      .then(response => response.json()).then( data => {\n\n        if(data[\"detailedResults\"].length < 1) {\n\n          // remove results chunk with error from list\n          var workingResults = this.state.results;\n          workingResults.splice(start, this.state.pageSize);\n          this.setState({\n            detailedResults: workingResults\n          });\n          // reload page from updated list\n          this.setDetailedResults();\n        } else {\n\n\n          this.setState({\n            detailedResults: data[\"detailedResults\"],\n            loadingExternal: false\n          });\n        }\n\n\n\n      })\n      .catch( error => {\n        console.log(error);\n      });\n\n\n  }\n\n  handlePageDecrement() {\n    if(this.state.currentPage-1 > 0) {\n      var cPage = this.state.currentPage - 1;\n      this.setState({\n        currentPage: cPage\n      });\n      this.setDetailedResults();\n\n    }\n  }\n\n  handlePageIncrement() {\n    // TODO: update condition\n    if( this.state.results !== undefined) {\n      if(this.state.currentPage + 1 <= Math.ceil(this.state.results.length  / this.state.pageSize)) {\n        var cPage = this.state.currentPage + 1;\n        this.setState({\n          currentPage: cPage\n        });\n        this.setDetailedResults();\n\n      }\n\n    }\n  }\n\n  handleEnterSearch(event) {\n    if( event.key === \"Enter\" ) {\n      this.handleQuery();\n    }\n\n  }\n\n  handleScroll(event) {\n    // alert(\"im scrolling\");\n    event.preventDefault();\n  }\n\n\n\n  handleQuery() {\n    if(this.state.searchInput !== \"\") {\n      this.setState({\n        loadingExternal: true\n      });\n\n\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ query: this.state.searchInput, pageSize: \"150\", pageNumber: \"1\" })\n      };\n      fetch( foodAPIURL + '/search/', requestOptions)\n        .then(response => response.json()).then( data => {\n\n\n          for(var i=0; i<this.state.pageSize; i++) {\n\n          }\n\n          if(data[\"results\"]) {\n\n            this.setState({\n              results: data[\"results\"],\n              totalHits: data[\"totalHits\"],\n              loadingExternal: false,\n              currentPage: 1\n            });\n            this.setDetailedResults();\n          } else {\n            this.setState({\n              results: [],\n              totalHits: 0,\n              loadingExternal: false,\n              currentPage: 1\n            });\n          }\n\n        })\n        .catch( error => {\n          console.log(error);\n          console.log(\"something went wrong with query\");\n\n        });\n\n  }\n\n}\n\n\n  handleQueryChange(event) {\n\n    this.setState({\n      searchInput: event.target.value\n    });\n\n  }\n  handleSignOff() {\n    this.setState({\n      loadingExternal: false,\n      selectedDate: new Date(),\n      currentFieldEditName: \"\",\n      currentEditInput: \"\",\n      showItemAddition: false,\n      expandItem: false,\n      showNutrition: false,\n      currentUser: null,\n      userInput: \"\",\n      searchInput: \"\",\n      currentPage: 1,\n      results: [],\n      detailedResults: [],\n      totalHits: 0,\n      emailInput:\"\",\n      passwordInput: \"\",\n      firstNameInput: \"\",\n      lastNameInput: \"\",\n      profilePicInput: null,\n      currentMeal: \"\",\n      loginError: \"\",\n      successMessage: \"\",\n      haveAccount: true,\n      showProfile: false\n\n    });\n\n  }\n\n\n  onSignIn(googleUser) {\n    var profile = googleUser.getBasicProfile();\n    console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n    console.log('Name: ' + profile.getName());\n    console.log('Image URL: ' + profile.getImageUrl());\n    console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n  }\n\n  handleSignIn() {\n    if(this.state.emailInput === '' || this.state.passwordInput === '') {\n      this.setState({\n        loginError: \"Please make sure all fields are filled in\"\n      });\n\n    } else {\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email: this.state.emailInput, password: this.state.passwordInput })\n      };\n\n      this.setState({\n        loadingExternal: true\n      });\n\n      fetch(foodAPIURL+'/user/login', requestOptions)\n      .then(response => response.json()).then( data => {\n          this.setState({\n            loadingExternal: false\n          });\n\n        if(data[\"successful\"] === false){\n          this.setState({\n            loginError: data[\"message\"],\n          });\n        } else{\n          console.log(data[\"user\"]);\n          this.setState({\n            currentUser: data[\"user\"],\n          });\n        }\n      })\n      .catch( error => console.log(error));\n\n    }\n\n\n\n\n  }\n\n  handleSignUp() {\n    if( this.state.firstNameInput === '' || this.state.lastNameInput === '' || this.state.emailInput === '' || this.state.passwordInput === '' || this.state.profilePicInput === null ) {\n      this.setState({\n        loginError: \"Please make sure all fields are filled in\"\n      });\n\n    } else {\n\n      this.setState({\n        loadingExternal: true\n      });\n\n      const form = new FormData();\n      form.append(\"email\", this.state.emailInput);\n      form.append(\"password\", this.state.passwordInput);\n      form.append(\"firstName\", this.state.firstNameInput);\n      form.append(\"lastName\", this.state.lastNameInput);\n      form.append(\"avatar\", this.state.profilePicInput);\n\n      const requestOptions = {\n        method: 'POST',\n        body: form,\n        mode: 'cors'\n      };\n\n\n      fetch(foodAPIURL+'/user/signup', requestOptions)\n      .then(response => response.json()).then( data => {\n        this.setState({\n          loadingExternal: false\n        });\n\n        if(data[\"successful\"] === false){\n          if(data[\"message\"] !== null) {\n            this.setState({\n              loginError: data[\"message\"],\n              loadingExternal: false\n\n            });\n          } else {\n            this.setState({\n              loginError: \"Account failed to be created.\"\n            });\n          }\n        } else{\n          console.log(data);\n          this.setState({\n            successMessage: data[\"message\"],\n            loginError: \"\",\n            haveAccount: true\n          });\n        }\n      })\n\n    }\n  }\n\n  handleProfilePicUpload(event) {\n    console.log(event.target.files[0]);\n    this.setState({\n      profilePicInput: event.target.files[0]\n    });\n  }\n  handleFirstNameInputChange(event){\n    this.setState({\n      firstNameInput: event.target.value\n    });\n  }\n\n  handleLastNameInputChange(event){\n    this.setState({\n      lastNameInput: event.target.value\n    });\n  }\n\n  handleEmailInputChange(event){\n    // alert(event.target.value);\n\n    this.setState({\n      emailInput: event.target.value\n    });\n\n  }\n\n  handlePasswordInputChange(event){\n    this.setState({\n      passwordInput: event.target.value\n    });\n  }\n\n  handleShowProfile() {\n//    alert(thing);\n    this.setState({\n      showProfile: !this.state.showProfile\n    });\n  }\n\n  handleHaveAccountToggle(){\n\n\n    this.setState({\n      haveAccount: !this.state.haveAccount,\n      loginError: \"\",\n      successMessage: \"\",\n      emailInput: \"\",\n      passwordInput: \"\",\n      firstNameInput: \"\",\n      lastNameInput: \"\"\n    });\n  }\n\n  handleNutritionScreenToggle(){\n    this.setState({\n      showNutrition: !this.state.showNutrition\n    });\n  }\n  handleItemScreenToggle(mealTitle) {\n    if(mealTitle != null && this.state.expandItem === false){\n      this.setState({\n        currentMeal: mealTitle\n      });\n    }\n\n    this.setState({\n      expandItem: !this.state.expandItem,\n    });\n\n  }\n\n  handleSearchScreenToggle(mealId) {\n    this.setState({\n      showItemAddition: !this.state.showItemAddition\n    });\n  }\n\n\n\n  handleDateIncrement() {\n    var n = this.state.selectedDate.getTime();\n    n += 86400000;\n    var newDate = new Date(n);\n\n    this.setState({\n      selectedDate: newDate\n    });\n\n  }\n\n  handleDateDecrement() {\n\n    var n = this.state.selectedDate.getTime();\n    n -= 86400000;\n    var newDate = new Date(n);\n\n    this.setState({\n      selectedDate: newDate\n    });\n\n  }\n\n  handleDateChange(event) {\n    var eventYear = event.target.value.substring(0,4);\n    var eventMonth = event.target.value.substring(5,7);\n    var eventDay = event.target.value.substring(8,10);\n    var eventDate = eventMonth + '/' + eventDay + '/'+eventYear;\n\n    var dateSelected = new Date(eventDate);\n    this.setState({\n      selectedDate: dateSelected\n    });\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"scroll\", this.handleScroll);\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n        <div className=\"Header\">\n          <img className=\"Logo\" src={logo}></img>\n          <h1>FoodPal</h1>\n\n\n          {this.state.currentUser === null &&\n            <div className=\"UserIconHeader\" style={{background: \"white\"}}></div>\n          }\n\n          {this.state.currentUser !== null &&\n            <div className=\"UserIconHeader\" onClick={this.handleShowProfile} style={{backgroundImage: \"url(\\\" \"+ this.state.currentUser[\"avatar\"] +\"\\\")\"}}></div>\n          }\n\n          {this.state.currentUser !== null &&\n            <p className=\"UserNameHeader\">{this.state.currentUser[\"firstName\"]}</p>\n          }\n\n        </div>\n\n\n\n        <DatePicker currentDate={this.state.selectedDate}\n          handleDateChange={this.handleDateChange}\n          handleDateIncrement={this.handleDateIncrement}\n          handleDateDecrement={this.handleDateDecrement}\n        />\n\n        <MealContainer\n          handleSearchScreenToggle={this.handleSearchScreenToggle}\n          handleItemScreenToggle={this.handleItemScreenToggle}\n          showItemAddition={this.state.showItemAddition}\n        />\n\n\n        {this.state.currentUser === null &&\n          <SignInScreen\n            haveAccount={this.state.haveAccount}\n            handleHaveAccountToggle={this.handleHaveAccountToggle}\n\n            handleFirstNameInputChange={this.handleFirstNameInputChange}\n            handleLastNameInputChange={this.handleLastNameInputChange}\n            handleEmailInputChange={this.handleEmailInputChange}\n            handlePasswordInputChange={this.handlePasswordInputChange}\n            handleProfilePicUpload={this.handleProfilePicUpload}\n\n            handleSignIn={this.handleSignIn}\n            handleSignUp={this.handleSignUp}\n            loadingExternal={this.state.loadingExternal}\n            error={this.state.loginError}\n            successMessage={this.state.successMessage}\n\n          />\n          // <ExternalScreen />\n        }\n\n\n        {this.state.showItemAddition === true &&\n          <SearchScreen\n            userInput={this.state.userInput}\n            handleSearchScreenToggle={this.handleSearchScreenToggle}\n            handleItemScreenToggle={this.handleItemScreenToggle}\n            loadingExternal={this.state.loadingExternal}\n            searchInput={this.state.searchInput}\n            handleQueryChange={this.handleQueryChange}\n            handleQuery={this.handleQuery}\n            handleEnterSearch={this.handleEnterSearch}\n            results={this.state.detailedResults}\n            totalHits={this.state.totalHits}\n            currentPage={this.state.currentPage}\n            handlePageDecrement={this.handlePageDecrement}\n            handlePageIncrement={this.handlePageIncrement}\n\n          />\n        }\n\n        {this.state.expandItem === true &&\n          <ItemScreen\n            handleItemScreenToggle={this.handleItemScreenToggle}\n            currentMeal={this.state.currentMeal}\n            showItemAddition={this.state.showItemAddition}\n            handleNutritionScreenToggle={this.handleNutritionScreenToggle}\n            showNutrition={this.state.showNutrition}\n            loadingExternal={this.state.loadingExternal}\n\n          />\n        }\n\n        {this.state.showProfile === true &&\n          <ProfileScreen \n            user={this.state.currentUser}\n            handleShowProfile={this.handleShowProfile}\n            handleSignOff={this.handleSignOff}\n            loadingExternal={this.state.loadingExternal}\n            handleEditFieldNameToggle={this.handleEditFieldNameToggle}\n            currentFieldEditName={this.state.currentFieldEditName}\n            handleEditProfile={this.handleEditProfile}\n            handleEditInputChange={this.handleEditInputChange}\n            handleQuitEditProfile={this.handleQuitEditProfile}\n          />\n        }\n\n      </div>\n    );\n\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/left-arrow-dark.638c7d9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-arrow-dark.b8f99d82.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit-dark.de4b9705.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.fa0fe205.svg\";"],"sourceRoot":""}