<?xml version="1.0"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Capa_1" x="0px" y="0px" viewBox="0 0 512 512" style="enable-background:new 0 0 512 512;" xml:space="preserve" width="512px" height="512px" class=""><g><script xmlns="" id="metastreaminitscript">(function() {
    document.getElementById('metastreaminitscript').remove()

    const INIT_TIMEOUT = 5e3
    const isFirefox = navigator.userAgent.toLowerCase().includes('firefox')

    //=========================================================================
    // document.createElement proxy
    //=========================================================================

    window.__metastreamMediaElements = new Set()

    // Proxy document.createElement to trap media elements created in-memory
    const origCreateElement = document.createElement
    const proxyCreateElement = function() {
      const element = origCreateElement.apply(document, arguments)
      if (window.__metastreamMediaElements &amp;&amp; element instanceof HTMLMediaElement) {
        window.__metastreamMediaElements.add(element)
      }
      return element
    }
    proxyCreateElement.toString = origCreateElement.toString.bind(origCreateElement)
    document.createElement = proxyCreateElement

    setTimeout(() =&gt; {
      if (window.__metastreamMediaElements) {
        window.__metastreamMediaElements.clear()
        window.__metastreamMediaElements = undefined
      }
    }, INIT_TIMEOUT)

    //=========================================================================
    // navigator.mediaSession proxy (Firefox)
    //=========================================================================

    if (isFirefox) {
      // stub out MediaSession API until Firefox supports this natively
      if (!navigator.mediaSession) {
        const noop = () =&gt; {}
        const mediaSessionStub = {
          __installedByMetastreamRemote__: true,
          setActionHandler: noop
        }
        Object.defineProperty(window.navigator, 'mediaSession', {
          value: mediaSessionStub,
          enumerable: false,
          writable: true
        })

        function MediaMetadata(metadata) {
          Object.assign(this, metadata)
        }
        window.MediaMetadata = MediaMetadata
      }

      const { mediaSession } = navigator

      // Capture action handlers for player.js proxy
      mediaSession._handlers = {}

      const _setActionHandler = mediaSession.setActionHandler
      mediaSession.setActionHandler = function(name, handler) {
        mediaSession._handlers[name] = handler
        _setActionHandler.apply(mediaSession, arguments)
      }
    }

    //=========================================================================
    // document.domain fix (Firefox)
    //=========================================================================

    if (isFirefox) {
      const domains = ['twitch.tv', 'crunchyroll.com']

      // Fix for setting document.domain in sandboxed iframe
      try {
        const { domain } = document
        if (domain &amp;&amp; domains.some(d =&gt; domain.includes(d))) {
          Object.defineProperty(document, 'domain', {
            value: domain,
            writable: true
          })
        }
      } catch (e) {}
    }

    //=========================================================================
    // Inline script embed prevention fix
    //=========================================================================

    const observeScripts = () =&gt; {
      const scriptSnippets = [
        { code: 'window.top !== window.self', replacement: 'false' },
        { code: 'self == top', replacement: 'true' },
        { code: 'top.location != window.location', replacement: 'false' }
      ]

      const getAddedScripts = mutationList =&gt;
        mutationList.reduce((scripts, mutation) =&gt; {
          if (mutation.type !== 'childList') return scripts
          const inlineScripts = Array.from(mutation.addedNodes).filter(
            node =&gt; node instanceof HTMLScriptElement &amp;&amp; node.innerHTML.length &gt; 0
          )
          return inlineScripts.length &gt; 0 ? [...scripts, ...inlineScripts] : scripts
        }, [])

      // Modifies inline scripts to allow embedding content in iframe
      const inlineScriptModifier = mutationsList =&gt; {
        const scripts = getAddedScripts(mutationsList)
        for (let script of scripts) {
          for (let snippet of scriptSnippets) {
            if (script.innerHTML.includes(snippet.code)) {
              script.innerHTML = script.innerHTML.split(snippet.code).join(snippet.replacement)
            }
          }
        }
      }

      const observer = new MutationObserver(inlineScriptModifier)
      observer.observe(document.documentElement, { childList: true, subtree: true })

      // Stop watching for changes after we finish loading
      window.addEventListener('load', () =&gt; observer.disconnect())
    }

    observeScripts()
  }());</script><path style="fill:#F2F2F2;" d="M0,154.501v314.773c0,23.573,19.083,42.667,42.667,42.667h426.667  c23.563,0,42.667-19.093,42.667-42.667V154.501L0,154.501L0,154.501z" data-original="#F2F2F2" class=""/><g>
	<polygon style="fill:#606C88" points="122.08,241.253 197.419,241.253 197.419,427.333 157.504,427.333 157.504,276.667    122.08,276.667  " data-original="#40596B" class="active-path" data-old_color="#40596B"/>
	<path style="fill:#606C88" d="M312.96,429.467c-25.728,0-44.981-8.736-57.771-26.219c-12.768-17.483-19.168-40.821-19.168-70.016   c0-29.173,6.4-52.544,19.168-70.016c12.789-17.461,32.043-26.219,57.771-26.219c25.728,0,45.003,8.757,57.771,26.219   c12.789,17.483,19.168,40.843,19.168,70.016c0,29.195-6.379,52.544-19.168,70.016C357.963,420.72,338.688,429.467,312.96,429.467    M285.547,288.368c-5.856,11.349-8.789,26.357-8.789,44.992c0,18.613,2.933,33.632,8.789,44.992   c5.856,11.36,14.997,17.045,27.413,17.045c12.416,0,21.557-5.685,27.435-17.045c5.856-11.349,8.768-26.379,8.768-44.992   c0-18.635-2.912-33.632-8.768-44.992c-5.877-11.339-15.019-17.056-27.435-17.056S291.392,277.029,285.547,288.368" data-original="#40596B" class="active-path" data-old_color="#40596B"/>
</g><path style="fill:#F3C623" d="M469.333,30.416H42.667C19.104,30.416,0,49.52,0,73.083v81.483h512V73.083  C512,49.52,492.896,30.416,469.333,30.416" data-original="#FF7058" class="" data-old_color="#FF7058"/><g>
	<path style="fill:#FFFFFF" d="M444.213,92.475c0,16.672-13.504,30.187-30.187,30.187c-16.672,0-30.165-13.515-30.165-30.187   s13.504-30.187,30.165-30.187C430.709,62.288,444.213,75.803,444.213,92.475" data-original="#FFFFFF" class=""/>
	<path style="fill:#FFFFFF" d="M128.171,92.475c0,16.672-13.525,30.187-30.187,30.187s-30.165-13.515-30.165-30.187   s13.504-30.187,30.165-30.187S128.171,75.803,128.171,92.475" data-original="#FFFFFF" class=""/>
</g><g>
	<path style="fill:#606C88" d="M414.336,0.059c-11.083,0-20.085,8.981-20.085,20.085l-0.309,65.109   c0,11.093,9.003,20.085,20.107,20.085c11.083,0,20.085-8.992,20.085-20.085l0.309-65.109C434.443,9.04,425.44,0.059,414.336,0.059" data-original="#40596B" class="active-path" data-old_color="#40596B"/>
	<path style="fill:#606C88" d="M98.293,0.059L98.293,0.059c-11.083,0-20.085,8.981-20.085,20.085l-0.309,65.099   c0,11.093,9.003,20.085,20.085,20.085c11.104,0,20.085-8.992,20.085-20.085l0.309-65.109C118.379,9.04,109.397,0.059,98.293,0.059" data-original="#40596B" class="active-path" data-old_color="#40596B"/>
</g></g> </svg>
