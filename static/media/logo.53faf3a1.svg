<?xml version="1.0"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Capa_1" x="0px" y="0px" viewBox="0 0 512 512" style="enable-background:new 0 0 512 512;" xml:space="preserve" width="512px" height="512px" class=""><g><script xmlns="" id="metastreaminitscript" class="active-path" style="">(function() {
    document.getElementById('metastreaminitscript').remove()

    const INIT_TIMEOUT = 5e3
    const isFirefox = navigator.userAgent.toLowerCase().includes('firefox')

    //=========================================================================
    // document.createElement proxy
    //=========================================================================

    window.__metastreamMediaElements = new Set()

    // Proxy document.createElement to trap media elements created in-memory
    const origCreateElement = document.createElement
    const proxyCreateElement = function() {
      const element = origCreateElement.apply(document, arguments)
      if (window.__metastreamMediaElements &amp;&amp; element instanceof HTMLMediaElement) {
        window.__metastreamMediaElements.add(element)
      }
      return element
    }
    proxyCreateElement.toString = origCreateElement.toString.bind(origCreateElement)
    document.createElement = proxyCreateElement

    setTimeout(() =&gt; {
      if (window.__metastreamMediaElements) {
        window.__metastreamMediaElements.clear()
        window.__metastreamMediaElements = undefined
      }
    }, INIT_TIMEOUT)

    //=========================================================================
    // navigator.mediaSession proxy (Firefox)
    //=========================================================================

    if (isFirefox) {
      // stub out MediaSession API until Firefox supports this natively
      if (!navigator.mediaSession) {
        const noop = () =&gt; {}
        const mediaSessionStub = {
          __installedByMetastreamRemote__: true,
          setActionHandler: noop
        }
        Object.defineProperty(window.navigator, 'mediaSession', {
          value: mediaSessionStub,
          enumerable: false,
          writable: true
        })

        function MediaMetadata(metadata) {
          Object.assign(this, metadata)
        }
        window.MediaMetadata = MediaMetadata
      }

      const { mediaSession } = navigator

      // Capture action handlers for player.js proxy
      mediaSession._handlers = {}

      const _setActionHandler = mediaSession.setActionHandler
      mediaSession.setActionHandler = function(name, handler) {
        mediaSession._handlers[name] = handler
        _setActionHandler.apply(mediaSession, arguments)
      }
    }

    //=========================================================================
    // document.domain fix (Firefox)
    //=========================================================================

    if (isFirefox) {
      const domains = ['twitch.tv', 'crunchyroll.com']

      // Fix for setting document.domain in sandboxed iframe
      try {
        const { domain } = document
        if (domain &amp;&amp; domains.some(d =&gt; domain.includes(d))) {
          Object.defineProperty(document, 'domain', {
            value: domain,
            writable: true
          })
        }
      } catch (e) {}
    }

    //=========================================================================
    // Inline script embed prevention fix
    //=========================================================================

    const observeScripts = () =&gt; {
      const scriptSnippets = [
        { code: 'window.top !== window.self', replacement: 'false' },
        { code: 'self == top', replacement: 'true' },
        { code: 'top.location != window.location', replacement: 'false' }
      ]

      const getAddedScripts = mutationList =&gt;
        mutationList.reduce((scripts, mutation) =&gt; {
          if (mutation.type !== 'childList') return scripts
          const inlineScripts = Array.from(mutation.addedNodes).filter(
            node =&gt; node instanceof HTMLScriptElement &amp;&amp; node.innerHTML.length &gt; 0
          )
          return inlineScripts.length &gt; 0 ? [...scripts, ...inlineScripts] : scripts
        }, [])

      // Modifies inline scripts to allow embedding content in iframe
      const inlineScriptModifier = mutationsList =&gt; {
        const scripts = getAddedScripts(mutationsList)
        for (let script of scripts) {
          for (let snippet of scriptSnippets) {
            if (script.innerHTML.includes(snippet.code)) {
              script.innerHTML = script.innerHTML.split(snippet.code).join(snippet.replacement)
            }
          }
        }
      }

      const observer = new MutationObserver(inlineScriptModifier)
      observer.observe(document.documentElement, { childList: true, subtree: true })

      // Stop watching for changes after we finish loading
      window.addEventListener('load', () =&gt; observer.disconnect())
    }

    observeScripts()
  }());</script><g>
	<g>
		<g>
			<path d="M160,85.333h192c5.888,0,10.667-4.779,10.667-10.667V53.333c0-17.643-14.357-32-32-32h-37.845     C285.291,8.32,271.317,0,256,0s-29.291,8.32-36.821,21.333h-37.845c-17.643,0-32,14.357-32,32v21.333     C149.333,80.555,154.112,85.333,160,85.333z" data-original="#000000" class="active-path" fill="#F3C623"/>
			<path d="M416,42.667h-21.333c-5.888,0-10.667,4.779-10.667,10.667v21.333c0,17.643-14.357,32-32,32H160     c-17.643,0-32-14.357-32-32V53.333c0-5.888-4.779-10.667-10.667-10.667H96c-17.643,0-32,14.357-32,32V480     c0,17.643,14.357,32,32,32h320c17.643,0,32-14.357,32-32V74.667C448,57.024,433.643,42.667,416,42.667z M138.667,437.333     c-11.755,0-21.333-9.579-21.333-21.333c0-11.755,9.579-21.333,21.333-21.333c11.755,0,21.333,9.579,21.333,21.333     C160,427.755,150.421,437.333,138.667,437.333z M138.667,352c-11.755,0-21.333-9.579-21.333-21.333s9.579-21.333,21.333-21.333     c11.755,0,21.333,9.579,21.333,21.333S150.421,352,138.667,352z M138.667,266.667c-11.755,0-21.333-9.579-21.333-21.333     c0-11.755,9.579-21.333,21.333-21.333c11.755,0,21.333,9.579,21.333,21.333C160,257.088,150.421,266.667,138.667,266.667z      M138.667,181.333c-11.755,0-21.333-9.579-21.333-21.333s9.579-21.333,21.333-21.333c11.755,0,21.333,9.579,21.333,21.333     S150.421,181.333,138.667,181.333z M288,426.667h-85.333c-5.888,0-10.667-4.779-10.667-10.667     c0-5.888,4.779-10.667,10.667-10.667H288c5.888,0,10.667,4.779,10.667,10.667C298.667,421.888,293.888,426.667,288,426.667z      M394.667,341.333h-192c-5.888,0-10.667-4.779-10.667-10.667S196.779,320,202.667,320h192c5.888,0,10.667,4.779,10.667,10.667     S400.555,341.333,394.667,341.333z M394.667,256h-192c-5.888,0-10.667-4.779-10.667-10.667s4.779-10.667,10.667-10.667h192     c5.888,0,10.667,4.779,10.667,10.667S400.555,256,394.667,256z M394.667,170.667h-192c-5.888,0-10.667-4.779-10.667-10.667     s4.779-10.667,10.667-10.667h192c5.888,0,10.667,4.779,10.667,10.667S400.555,170.667,394.667,170.667z" data-original="#000000" class="active-path" fill="#F3C623"/>
		</g>
	</g>
</g></g> </svg>
